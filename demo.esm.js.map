{"version":3,"file":"demo.esm.js","mappings":"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","sources":["webpack://@byte.n/scroll-frame-canvas/./src/ScrollFrameCanvas.ts","webpack://@byte.n/scroll-frame-canvas/./src/events.ts","webpack://@byte.n/scroll-frame-canvas/./src/utils.ts","webpack://@byte.n/scroll-frame-canvas/webpack/bootstrap","webpack://@byte.n/scroll-frame-canvas/webpack/runtime/define property getters","webpack://@byte.n/scroll-frame-canvas/webpack/runtime/hasOwnProperty shorthand","webpack://@byte.n/scroll-frame-canvas/webpack/runtime/make namespace object","webpack://@byte.n/scroll-frame-canvas/./src/demo.ts"],"sourcesContent":["import { EventEmitter } from './events';\nimport { clamp, deepMerge, noop, runTasks, selectFit } from './utils';\n\nexport interface ScrollFrameCanvasOptions {\n  canvasEle: HTMLCanvasElement;\n  scrollbarEle: HTMLElement | Window | Document;\n  images?: Array<HTMLImageElement | ImageBitmap | string>;\n  total?: number;\n  imageFactory?: (index: number) => Promise<HTMLImageElement | ImageBitmap | string | null>;\n  large?: {\n    enabled?: boolean;\n    factor?: number;\n    showBackgroundProgress?: boolean;\n  },\n  onFrame?: (frame: number, offset: number) => void;\n  onComplete?: () => void;\n  onInitComplete?: () => void;\n  onError?: (error: Error & { frameIndex?: number }) => void;\n  customMainLoading?: (params: {\n    ctx: CanvasRenderingContext2D;\n    canvas: HTMLCanvasElement;\n    progress: number;\n    progressCount: number;\n    totalProgress: number;\n    canvasWidth: number;\n    canvasHeight: number;\n  }) => void;\n  customBackgroundLoading?: (params: {\n    ctx: CanvasRenderingContext2D;\n    canvas: HTMLCanvasElement;\n    progress: number;\n    progressCount: number;\n    totalFrames: number;\n    canvasWidth: number;\n    canvasHeight: number;\n  }) => void;\n  scaleMode?: 'contain' | 'cover' | 'fill';\n  scrollAxis: 'x' | 'y';\n  frameMapper: (scrollPixels: number, totalScrollPixels: number, totalFrames: number) => number;\n  resetScrollOnInit?: boolean;\n  maxConcurrentLoads?: number;\n}\n\n/**\n * 基于滚动条驱动的 Canvas 帧序列渲染器\n */\nexport default class ScrollFrameCanvas extends EventEmitter {\n  private options: ScrollFrameCanvasOptions;\n  private canvas: HTMLCanvasElement;\n  private ctx: CanvasRenderingContext2D | null;\n  private scrollbarEle: HTMLElement | Window | Document;\n  private images: Array<HTMLImageElement | ImageBitmap | string> | null;\n  private total: number;\n  private totalProgress: number;\n  private imageFactory: ((index: number) => Promise<HTMLImageElement | ImageBitmap | string | null>) | null;\n\n  // 运行时状态\n  private _playing: boolean = false;\n  private _rAFId: number = 0;\n  private _currentFrame: number = 0;\n  private _lastDrawnFrame: number = -1;\n  private _lastRealDrawFrame: number = -1;\n  private _destroyed: boolean = false;\n\n  // 预渲染的帧数据\n  private _preRenderedFrames: ImageBitmap[] = [];\n\n  // 加载动画状态\n  private _loadingAnimationId: number = 0;\n  private _loadingProgressCount: number = 0;\n  private _loadingProgress: number = 0;\n  private _loadingCompleted: boolean = false;\n  private _originalScrollBehavior: string = '';\n  private _originalScrollRestoration: ScrollRestoration | null = null;\n\n  // 后续层加载动画状态\n  private _backgroundLoadingAnimationId: number = 0;\n  private _backgroundLoadingProgressCount: number = 0;\n  private _backgroundLoadingProgress: number = 0;\n  private _backgroundLoadingCompleted: boolean = false;\n\n  private _boundOnScroll: () => void;\n\n  constructor(options: ScrollFrameCanvasOptions) {\n    super();\n    if (!options || !options.canvasEle) throw new Error('canvasEle 必填');\n    if (!options.scrollbarEle) throw new Error('scrollbarEle 必填');\n\n    this.options = deepMerge<ScrollFrameCanvasOptions>({\n      scaleMode: 'contain',\n      resetScrollOnInit: true,\n      maxConcurrentLoads: 6,\n      onFrame: noop,\n      onComplete: noop,\n      onError: noop,\n      large: { enabled: true, factor: 4, showBackgroundProgress: true },\n    } as unknown as ScrollFrameCanvasOptions, options);\n\n    if (!this.options.frameMapper) {\n      throw new Error('frameMapper 是必填项');\n    }\n    if (!this.options.scrollAxis || (this.options.scrollAxis !== 'x' && this.options.scrollAxis !== 'y')) {\n      throw new Error('scrollAxis 必须指定为 \"x\" 或 \"y\"');\n    }\n\n    this.canvas = this.options.canvasEle;\n    this.ctx = this.canvas.getContext('2d');\n\n    this.scrollbarEle = this.options.scrollbarEle;\n\n    // 源图像数据\n    this.images = Array.isArray(this.options.images) ? this.options.images.slice() : null;\n    this.total = this.images ? this.images.length : (this.options.total || 0);\n\n    if (this.total <= 1) {\n      throw new Error('总帧数必须大于 1');\n    }\n\n    if (this.options.large.enabled) {\n      const { factor } = this.options.large;\n      if (factor <= 2) {\n        throw new Error('large.factor 必须大于 2');\n      }\n      if ((factor & (factor - 1)) !== 0) {\n        throw new Error('large.factor 必须是2的幂次方（2, 4, 8, 16, 32, 64...）');\n      }\n      if (this.total < factor * 2) {\n        throw new Error('总帧数必须大于 large.factor * 2');\n      }\n    }\n\n    this.totalProgress = this.total;\n    this.imageFactory = this.options.imageFactory || null;\n    if (!this.images && (!this.total || !this.imageFactory)) {\n      throw new Error('必须提供 images 或 total+imageFactory');\n    }\n\n    // 绑定回调（事件系统 + 直连回调）\n    if (this.options.onFrame) this.on('frame', this.options.onFrame);\n    if (this.options.onComplete) this.on('complete', this.options.onComplete);\n    if (this.options.onInitComplete) this.on('initComplete', this.options.onInitComplete);\n    if (this.options.onError) this.on('error', this.options.onError);\n\n    // 监听\n    this._boundOnScroll = () => this._handleScroll();\n\n    this._attachScroll();\n  }\n\n  /** 启动 */\n  async init(): Promise<this> {\n    const total = this.getTotalFrames();\n    this._preRenderedFrames = new Array(total);\n\n    // 创建 OffscreenCanvas 用于预渲染\n    const offscreenCanvas = new OffscreenCanvas(this.canvas.width, this.canvas.height);\n    const offscreenCtx = offscreenCanvas.getContext('2d');\n\n    if (!offscreenCtx) {\n      throw new Error('无法创建 OffscreenCanvas 上下文');\n    }\n\n    // 禁止滚动\n    this._disableScroll();\n\n    // 开始显示加载动画\n    this._startLoadingAnimation();\n\n    try {\n      const large = this.options.large;\n      if (large.enabled) {\n        let factor = large.factor;\n        const factorList = [];\n        while (factor !== 1) {\n          factorList.push(factor);\n          factor = factor / 2;\n        }\n        factorList.push(1);\n\n        const groups: number[][] = Array.from<number[], number[]>({ length: factorList.length }, () => {\n          return [];\n        });\n        // 第一轮必然加载首位两帧\n        groups[0].push(0, this.total - 1);\n\n        const dup = new Set<number>([0, this.total - 1]);\n        for (let i = 0; i < this.total; i++) {\n          if (dup.has(i)) {\n            continue;\n          }\n          for (let j = 0; j < factorList.length; j++) {\n            if (i % factorList[j] === 0) {\n              groups[j].push(i);\n              dup.add(i);\n              break;\n            }\n          }\n        }\n        groups[0].sort((a, b) => a - b);\n        this.totalProgress = groups[0].length;\n\n        await runTasks(\n          groups[0].map((i) => () => {\n            return this._preloadAndRenderFrame(i, offscreenCanvas, offscreenCtx);\n          }),\n          this.options.maxConcurrentLoads!,\n        );\n        this.totalProgress = this.total;\n        Promise.resolve()\n          .then(async () => {\n            // 启动后续层加载进度动画\n            this._startBackgroundLoadingAnimation();\n\n            for (const item of groups) {\n              if (item === groups[0]) {\n                continue;\n              }\n\n              await runTasks(\n                item.map((i) => async () => {\n                  const result = await this._preloadAndRenderFrame(i, offscreenCanvas, offscreenCtx);\n                  // 更新后续层加载进度\n                  this._updateBackgroundLoadingProgress();\n                  return result;\n                }),\n                this.options.maxConcurrentLoads!,\n              );\n            }\n\n          })\n          .finally(() => {\n            // 停止后续层加载进度动画\n            this._stopBackgroundLoadingAnimation();\n          });\n      } else {\n        // 并行加载所有图片并预渲染\n        await runTasks(\n          Array.from({ length: total }, (_, i) => () => {\n            return this._preloadAndRenderFrame(i, offscreenCanvas, offscreenCtx);\n          }),\n          this.options.maxConcurrentLoads!,\n        );\n        // 移除 null 元素并更新 total\n        this._cleanupNullFrames();\n      }\n\n\n\n      // 恢复滚动\n      this._enableScroll();\n\n      // 触发初始化完成事件\n      this.emit('initComplete');\n      return this;\n    } catch (error) {\n      // 出错时也要停止动画并恢复滚动\n      this._enableScroll();\n      throw error;\n    } finally {\n      this._stopLoadingAnimation();\n    }\n  }\n\n  /** 开始播放（启用渲染循环） */\n  play(): void {\n    if (this._playing) return;\n    this._playing = true;\n    this._tick();\n  }\n\n  /** 暂停播放 */\n  pause(): void {\n    this._playing = false;\n    if (this._rAFId) {\n      cancelAnimationFrame(this._rAFId);\n      this._rAFId = 0;\n    }\n  }\n\n  /** 停止并重置到 0 帧 */\n  stop(): void {\n    this.pause();\n    this.setFrame(0);\n  }\n\n  /**\n   * 设置当前帧\n   */\n  setFrame(frameIndex: number): void {\n    const idx = clamp(Math.round(frameIndex), 0, this.getTotalFrames() - 1);\n    this._currentFrame = idx;\n    this._renderIfNeeded();\n  }\n\n  /** 获取当前帧索引 */\n  getCurrentFrame(): number {\n    return this._currentFrame;\n  }\n\n  /** 获取总帧数 */\n  getTotalFrames(): number {\n    return this.total;\n  }\n\n  /** 销毁并清理资源 */\n  destroy(): void {\n    if (this._destroyed) return;\n    this.pause();\n    this._detachScroll();\n\n    // 停止加载动画\n    if (this._loadingAnimationId) {\n      cancelAnimationFrame(this._loadingAnimationId);\n      this._loadingAnimationId = 0;\n    }\n    this._loadingCompleted = false;\n\n    // 停止后续层加载动画\n    if (this._backgroundLoadingAnimationId) {\n      cancelAnimationFrame(this._backgroundLoadingAnimationId);\n      this._backgroundLoadingAnimationId = 0;\n    }\n    this._backgroundLoadingCompleted = false;\n\n    // 恢复滚动\n    this._enableScroll();\n\n    this._destroyed = true;\n  }\n\n  private _cleanupNullFrames(): void {\n    // 移除 null 元素，重新排列数组\n    const validFrames: ImageBitmap[] = [];\n    const originalLength = this._preRenderedFrames.length;\n\n    for (let i = 0; i < originalLength; i++) {\n      const frame = this._preRenderedFrames[i];\n      if (frame !== null && frame !== undefined) {\n        validFrames.push(frame);\n      }\n    }\n\n    // 更新预渲染帧数组和总数\n    this._preRenderedFrames = validFrames;\n    this.total = validFrames.length;\n\n    // 如果当前帧索引超出新的总数，重置到最后一帧\n    if (this._currentFrame >= this.total) {\n      this._currentFrame = Math.max(0, this.total - 1);\n    }\n  }\n\n  private async _preloadAndRenderFrame (\n    index: number, offscreenCanvas: OffscreenCanvas, offscreenCtx: OffscreenCanvasRenderingContext2D,\n    isBack = false,\n  ): Promise<void> {\n    try {\n      const image = await this._loadFrame(index);\n\n      // 如果 image 为 null，跳过渲染，但保留数组位置\n      if (image === null) {\n        this._preRenderedFrames[index] = null as any; // 标记为 null\n        if (!isBack) {\n          this.totalProgress--;\n          this._updateLoadingProgress();\n        }\n        return;\n      }\n      await this._parseImageData(index, offscreenCanvas, offscreenCtx, image);\n\n      if (!isBack) {\n        this._updateLoadingProgress();\n      }\n    } catch (err) {\n      const error = new Error(`预加载帧 ${index} 失败: ${err instanceof Error ? err.message : String(err)}`);\n      (error as any).frameIndex = index;\n      this.emit('error', error);\n      throw error;\n    }\n  }\n\n  private async _parseImageData(index: number, offscreenCanvas: OffscreenCanvas, offscreenCtx: OffscreenCanvasRenderingContext2D, image: ImageBitmap | HTMLImageElement): Promise<void> {\n    try {\n      if (image instanceof ImageBitmap) {\n        this._preRenderedFrames[index] = image;\n        return;\n      }\n      // 清空 OffscreenCanvas\n      offscreenCtx.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n      // 在 OffscreenCanvas 上绘制图片\n      this._drawImageToOffscreen(image, offscreenCtx, offscreenCanvas.width, offscreenCanvas.height);\n      // 将 OffscreenCanvas 转换为 ImageBitmap 并存储\n      this._preRenderedFrames[index] = await createImageBitmap(offscreenCanvas);\n    } catch (err) {\n      const error = new Error(`预加载帧 ${index} 失败: ${err instanceof Error ? err.message : String(err)}`);\n      (error as any).frameIndex = index;\n      this.emit('error', error);\n      throw error;\n    }\n  }\n\n  private async _loadFrame(index: number): Promise<HTMLImageElement | ImageBitmap | null> {\n    const image = await this._getImage(index);\n    if (image === null) {\n      return null;\n    }\n    if (typeof image === 'string') {\n      return this._loadImageFromURL(image);\n    }\n    return image;\n  }\n\n  private async _getImage(index: number): Promise<HTMLImageElement | ImageBitmap | string | null> {\n    if (this.images) {\n      if (this.images[index] === undefined) {\n        throw new Error(`images 数组索引 ${index} 对应的图片为 undefined`);\n      }\n      return this.images[index];\n    }\n\n    if (!this.imageFactory) {\n      throw new Error('无可用的 imageFactory 或 images');\n    }\n\n    const result = await this.imageFactory(index);\n    if (result === undefined) {\n      throw new Error(`imageFactory 返回 undefined for index ${index}`);\n    }\n    return result;\n  }\n\n  private _loadImageFromURL(url: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.onload = () => resolve(img);\n      img.onerror = () => reject(new Error('Image load error'));\n      img.src = url;\n    });\n  }\n\n  private _drawImageToOffscreen(img: HTMLImageElement | ImageBitmap, ctx: OffscreenCanvasRenderingContext2D, canvasW: number, canvasH: number): void {\n    const natW = (img as HTMLImageElement).naturalWidth || img.width || 1;\n    const natH = (img as HTMLImageElement).naturalHeight || img.height || 1;\n\n    const fit = selectFit(this.options.scaleMode!, natW, natH, canvasW, canvasH);\n\n    ctx.drawImage(img, 0, 0, natW, natH, Math.round(fit.x), Math.round(fit.y), Math.round(fit.w), Math.round(fit.h));\n  }\n\n  private _disableScroll(): void {\n    const el = this.scrollbarEle;\n    if (el === window || el === document || el === document.body) {\n      // 保存原始滚动行为\n      this._originalScrollBehavior = document.body.style.overflow;\n      // 根据配置决定是否重置滚动位置\n      if (this.options.resetScrollOnInit) {\n        this._originalScrollRestoration = history.scrollRestoration;\n        history.scrollRestoration = 'manual';\n        document.documentElement.scrollTop = 0;\n        document.documentElement.scrollLeft = 0;\n      }\n      document.body.style.overflow = 'hidden';\n    } else {\n      const htmlEl = el as HTMLElement;\n      // 保存原始滚动行为\n      this._originalScrollBehavior = htmlEl.style.overflow;\n      // 根据配置决定是否重置滚动位置\n      if (this.options.resetScrollOnInit) {\n        htmlEl.scrollTop = 0;\n        htmlEl.scrollLeft = 0;\n      }\n      htmlEl.style.overflow = 'hidden';\n    }\n  }\n\n  private _enableScroll(): void {\n    const el = this.scrollbarEle;\n    if (el === window || el === document || el === document.body) {\n      // 恢复原始滚动行为\n      if (this._originalScrollRestoration) {\n        history.scrollRestoration = this._originalScrollRestoration;\n      }\n      document.body.style.overflow = this._originalScrollBehavior;\n    } else {\n      const htmlEl = el as HTMLElement;\n      // 恢复原始滚动行为\n      htmlEl.style.overflow = this._originalScrollBehavior;\n    }\n  }\n\n  private _attachScroll(): void {\n    const el = this.scrollbarEle;\n    if (!el) return;\n    const opts = { passive: true };\n    if (el === window || el === document) {\n      window.addEventListener('scroll', this._boundOnScroll, opts);\n      window.addEventListener('touchmove', this._boundOnScroll, opts);\n    } else {\n      el.addEventListener('scroll', this._boundOnScroll, opts);\n      el.addEventListener('touchmove', this._boundOnScroll, opts);\n    }\n  }\n\n  private _detachScroll(): void {\n    const el = this.scrollbarEle;\n    if (!el) return;\n    if (el === window || el === document) {\n      window.removeEventListener('scroll', this._boundOnScroll);\n      window.removeEventListener('touchmove', this._boundOnScroll);\n    } else {\n      el.removeEventListener('scroll', this._boundOnScroll);\n      el.removeEventListener('touchmove', this._boundOnScroll);\n    }\n  }\n\n\n  private _getScrollPixels(): { scrollPixels: number; totalScrollPixels: number } {\n    const el = this.scrollbarEle;\n    const axis = this.options.scrollAxis;\n\n    if (el === window || el === document) {\n      const doc = document.documentElement;\n      const scrollTop = window.pageYOffset || doc.scrollTop || 0;\n      const scrollLeft = window.pageXOffset || doc.scrollLeft || 0;\n\n      const maxY = (doc.scrollHeight - doc.clientHeight) || 1;\n      const maxX = (doc.scrollWidth - doc.clientWidth) || 1;\n\n      const scrollPixels = axis === 'x' ? scrollLeft : scrollTop;\n      const totalScrollPixels = axis === 'x' ? maxX : maxY;\n      return { scrollPixels, totalScrollPixels };\n    } else {\n      const htmlEl = el as HTMLElement;\n      const maxY = (htmlEl.scrollHeight - htmlEl.clientHeight) || 1;\n      const maxX = (htmlEl.scrollWidth - htmlEl.clientWidth) || 1;\n\n      const scrollPixels = axis === 'x' ? htmlEl.scrollLeft : htmlEl.scrollTop;\n      const totalScrollPixels = axis === 'x' ? maxX : maxY;\n      return { scrollPixels, totalScrollPixels };\n    }\n  }\n\n  private _handleScroll(): void {\n    if (!this._playing) return;\n    // 只更新帧索引，不直接绘制\n    this._currentFrame = this._calcFrameFromScroll();\n  }\n\n  private _tick(): void {\n    if (!this._playing) return;\n    this._rAFId = requestAnimationFrame(() => {\n      // 检查当前帧是否需要绘制\n      if (this._currentFrame !== this._lastDrawnFrame) {\n        this._renderIfNeeded();\n        if (this._backgroundLoadingAnimationId !== 0 && !this._backgroundLoadingCompleted) {\n          this._drawBackgroundLoadingAnimation();\n        }\n        // const animate = () => {\n        //   if (this._backgroundLoadingAnimationId === 0) return;\n        //   if (this._backgroundLoadingCompleted) return;\n        // };\n        // this._backgroundLoadingAnimationId = requestAnimationFrame(animate);\n      }\n      // 继续循环\n      if (this._playing) {\n        this._tick();\n      }\n    });\n  }\n\n  private _calcFrameFromScroll(): number {\n    const total = this.getTotalFrames();\n    const { scrollPixels, totalScrollPixels } = this._getScrollPixels();\n    const frameIndex = this.options.frameMapper(scrollPixels, totalScrollPixels, total);\n    return clamp(Math.round(frameIndex), 0, total - 1);\n  }\n\n  private _renderIfNeeded (force: boolean = false, usePrevRealFrame = false) {\n    const frame = this._currentFrame;\n    if (!force) {\n      if (frame === this._lastDrawnFrame) {\n        return;\n      }\n    }\n    let realFrame = frame;\n    if (usePrevRealFrame) {\n      realFrame = this._lastRealDrawFrame;\n    }\n    try {\n      // 使用预渲染的帧数据\n      let preRenderedFrame = this._preRenderedFrames[realFrame];\n      if (!preRenderedFrame) {\n        if (this.options.large.enabled) {\n          for (let i = realFrame + 1; i < this._preRenderedFrames.length; i++) {\n            if (this._preRenderedFrames[i]) {\n              preRenderedFrame = this._preRenderedFrames[i];\n              realFrame = i;\n              break;\n            }\n          }\n          if (!preRenderedFrame) {\n            throw new Error(`帧 ${realFrame} 及其后续都没有可用的帧`);\n          }\n        } else {\n          if (!preRenderedFrame) {\n            throw new Error(`帧 ${realFrame} 未预渲染或已被清理`);\n          }\n        }\n      }\n\n      this._drawPreRenderedFrame(preRenderedFrame);\n      this._lastDrawnFrame = frame;\n      this._lastRealDrawFrame = realFrame;\n\n      const { scrollPixels, totalScrollPixels } = this._getScrollPixels();\n      const offset = totalScrollPixels > 0 ? scrollPixels / totalScrollPixels : 0;\n      this.emit('frame', frame, offset);\n\n      if (frame === this.getTotalFrames() - 1) {\n        this.emit('complete');\n      }\n    } catch (err) {\n      const error = new Error(`渲染帧失败: ${err instanceof Error ? err.message : String(err)}`);\n      (error as any).frameIndex = frame;\n      this.emit('error', error);\n    }\n  }\n\n  private _drawPreRenderedFrame (preRenderedFrame: ImageBitmap): void {\n    if (!this.ctx) return;\n\n    const ctx = this.ctx;\n    const canvasW = this.canvas.width;\n    const canvasH = this.canvas.height;\n\n    ctx.clearRect(0, 0, canvasW, canvasH);\n    ctx.drawImage(preRenderedFrame, 0, 0, canvasW, canvasH);\n  }\n\n  private _startLoadingAnimation() {\n    this._loadingProgress = 0;\n    this._loadingProgressCount = 0;\n    this._loadingCompleted = false;\n  }\n\n  private _stopLoadingAnimation (): void {\n    this._loadingCompleted = true;\n    cancelAnimationFrame(this._loadingAnimationId);\n      this._loadingAnimationId = 0;\n      // 清空画布\n      if (this.ctx) {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      }\n  }\n\n  private _updateLoadingProgress (): void {\n    this._loadingProgressCount++;\n    this._loadingProgress = Math.min(1, Math.max(0, this._loadingProgressCount / this.totalProgress));\n\n    const animate = () => {\n      if (this._loadingAnimationId === 0) return;\n      if (this._loadingCompleted) return;\n      this._drawLoadingAnimation();\n    };\n\n    this._loadingAnimationId = requestAnimationFrame(animate);\n  }\n\n  private _drawLoadingAnimation(): void {\n    if (this._loadingCompleted) return;\n    if (!this.ctx) return;\n\n    const ctx = this.ctx;\n    const canvasW = this.canvas.width;\n    const canvasH = this.canvas.height;\n\n    // 如果有自定义主加载渲染函数，使用它\n    if (this.options.customMainLoading) {\n      this.options.customMainLoading({\n        ctx,\n        canvas: this.canvas,\n        progress: this._loadingProgress,\n        progressCount: this._loadingProgressCount,\n        totalProgress: this.totalProgress,\n        canvasWidth: canvasW,\n        canvasHeight: canvasH,\n      });\n      return;\n    }\n\n    // 默认的主加载动画\n    // 清空画布\n    ctx.clearRect(0, 0, canvasW, canvasH);\n\n    // 设置深色背景，类似图像中的米色/浅灰背景\n    ctx.fillStyle = '#2a2a2a';\n    ctx.fillRect(0, 0, canvasW, canvasH);\n\n    // 绘制数字百分比\n    const percentage = Math.round(this._loadingProgress * 100);\n    const percentageStr = percentage.toString();\n\n    // 设置柔和的字体颜色，类似图像中的深色数字\n    ctx.fillStyle = '#8a8a7a';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    // 计算字体大小（基于 canvas 宽度）\n    const fontSize = canvasW * 0.07;\n\n    // 使用更粗的字体来模拟图像中的效果\n    ctx.font = `900 ${fontSize}px 'Arial', sans-serif`;\n    ctx.fillText(percentageStr, canvasW / 2, canvasH / 2 - fontSize * 0.1);\n\n    // 绘制\"LOADING\"文本\n    const loadingFontSize = canvasW * 0.0125;\n    ctx.font = `400 ${loadingFontSize}px 'Arial', sans-serif`;\n    ctx.fillStyle = '#6a6a6a';\n    ctx.fillText('LOADING', canvasW / 2, canvasH / 2 + fontSize * 0.35);\n\n    // 添加动态点效果\n    const time = Date.now();\n    const dotCount = Math.floor((time / 500) % 4); // 每500ms切换一次\n    const dots = '.'.repeat(dotCount);\n    ctx.fillText(dots, canvasW / 2 + ctx.measureText('LOADING').width / 2 + canvasW * 0.01, canvasH / 2 + fontSize * 0.35);\n  }\n\n  private _startBackgroundLoadingAnimation (): void {\n    if (!this.options.large?.showBackgroundProgress) return;\n\n    this._backgroundLoadingProgress = 0;\n    this._backgroundLoadingProgressCount = 0;\n    this._backgroundLoadingCompleted = false;\n  }\n\n  private _stopBackgroundLoadingAnimation (): void {\n    if (!this.options.large?.showBackgroundProgress) return;\n\n    this._backgroundLoadingCompleted = true;\n    if (this._backgroundLoadingAnimationId) {\n      cancelAnimationFrame(this._backgroundLoadingAnimationId);\n      this._backgroundLoadingAnimationId = 0;\n    }\n    requestAnimationFrame(() => this._renderIfNeeded(true, true));\n  }\n\n  private _updateBackgroundLoadingProgress (): void {\n    if (!this.options.large?.showBackgroundProgress) return;\n\n    const totalFrames = this.total;\n    this._backgroundLoadingProgressCount++;\n    this._backgroundLoadingProgress = Math.min(1, Math.max(0, this._backgroundLoadingProgressCount / totalFrames));\n    const animate = () => {\n      if (this._backgroundLoadingAnimationId === 0) return;\n      if (this._backgroundLoadingCompleted) return;\n      this._drawBackgroundLoadingAnimation();\n    };\n    this._backgroundLoadingAnimationId = requestAnimationFrame(animate);\n  }\n\n  private _drawBackgroundLoadingAnimation (): void {\n    if (this._backgroundLoadingCompleted || !this.ctx) return;\n    if (!this.options.large?.showBackgroundProgress) return;\n    this._renderIfNeeded(true, true);\n\n    const ctx = this.ctx;\n    const canvasW = this.canvas.width;\n    const canvasH = this.canvas.height;\n\n    // 如果有自定义后续层加载渲染函数，使用它\n    if (this.options.customBackgroundLoading) {\n      this.options.customBackgroundLoading({\n        ctx,\n        canvas: this.canvas,\n        progress: this._backgroundLoadingProgress,\n        progressCount: this._backgroundLoadingProgressCount,\n        totalFrames: this.total,\n        canvasWidth: canvasW,\n        canvasHeight: canvasH,\n      });\n      return;\n    }\n\n    // 默认的后续层加载动画\n    const fontSize = canvasW * 0.006;\n    const textY = canvasH - fontSize;\n    const centerX = canvasW / 2;\n\n    // 绘制主要文字 - \"完整动画加载中\"\n    const percentage = Math.round(this._backgroundLoadingProgress * 100);\n    const text = `加载中: ${percentage}%`;\n\n    ctx.font = `${fontSize}px Arial`;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    // 测量文本宽度\n    const textMetrics = ctx.measureText(text);\n    const textWidth = textMetrics.width;\n    const textHeight = fontSize;\n\n    // 计算背景框的位置和大小\n    const padding = fontSize * 0.75; // 内边距\n    const bgWidth = textWidth + padding * 2;\n    const bgHeight = textHeight + padding;\n    const bgX = centerX - bgWidth / 2;\n    const bgY = textY - 5 - bgHeight / 2;\n    const borderRadius = fontSize * 0.3; // 圆角半径\n\n    // 绘制带圆角的背景\n    ctx.fillStyle = 'rgba(0,0,0,0.3)'; // 浅灰色半透明背景\n    ctx.beginPath();\n    ctx.roundRect(bgX, bgY, bgWidth, bgHeight, borderRadius);\n    ctx.fill();\n\n    // 绘制文字\n    ctx.fillStyle = 'rgba(255,255,255,0.75)'; // 浅灰色文字\n    ctx.fillText(text, centerX, textY - 5);\n  }\n\n}\n","// 轻量事件系统，支持优先级与可选防抖\ntype ListenerInfo = {\n  fn: Function;\n  priority: number;\n  debounceMs: number;\n  wrapped: Function;\n};\n\ntype EventOptions = {\n  priority?: number;\n  debounceMs?: number;\n};\n\nexport class EventEmitter {\n  private _listeners: Map<string, ListenerInfo[]> = new Map();\n\n  /**\n   * 监听事件\n   */\n  on(event: string, listener: Function, options: EventOptions = {}): this {\n    const priority = Number.isFinite(options.priority) ? options.priority! : 0;\n    const debounceMs = Number.isFinite(options.debounceMs) ? options.debounceMs! : 0;\n    let wrapped = listener;\n    if (debounceMs > 0) {\n      wrapped = debounce(listener, debounceMs);\n    }\n    const arr = this._listeners.get(event) || [];\n    arr.push({ fn: listener, priority, debounceMs, wrapped });\n    arr.sort((a, b) => b.priority - a.priority);\n    this._listeners.set(event, arr);\n    return this;\n  }\n\n  /**\n   * 取消事件\n   */\n  off(event: string, listener: Function): this {\n    const arr = this._listeners.get(event);\n    if (!arr) return this;\n    const idx = arr.findIndex((l) => l.fn === listener);\n    if (idx >= 0) {\n      arr.splice(idx, 1);\n    }\n    if (arr.length === 0) this._listeners.delete(event);\n    return this;\n  }\n\n  /**\n   * 触发事件\n   */\n  emit(event: string, ...args: any[]): boolean {\n    const arr = this._listeners.get(event);\n    if (!arr || arr.length === 0) return false;\n    for (const { wrapped } of arr) {\n      try { \n        wrapped(...args); \n      } catch (err) { \n        setTimeout(() => { throw err; }, 0); \n      }\n    }\n    return true;\n  }\n}\n\n/**\n * 简易防抖\n */\nexport function debounce<T extends Function>(fn: T, wait: number): T {\n  let t: NodeJS.Timeout | null = null;\n  return ((...args: any[]) => {\n    if (t) clearTimeout(t);\n    t = setTimeout(() => fn.apply(undefined, args), wait);\n  }) as unknown as T;\n}\n","export function clamp(value: number, min: number, max: number): number {\n  return Math.max(min, Math.min(max, value));\n}\n\nexport function noop(): void {}\n\nexport function fitRectContain(srcW: number, srcH: number, dstW: number, dstH: number) {\n  const srcRatio = srcW / srcH;\n  const dstRatio = dstW / dstH;\n  if (srcRatio > dstRatio) {\n    const w = dstW;\n    const h = w / srcRatio;\n    const x = 0;\n    const y = (dstH - h) / 2;\n    return { x, y, w, h };\n  } else {\n    const h = dstH;\n    const w = h * srcRatio;\n    const x = (dstW - w) / 2;\n    const y = 0;\n    return { x, y, w, h };\n  }\n}\n\nexport function fitRectCover(srcW: number, srcH: number, dstW: number, dstH: number) {\n  const srcRatio = srcW / srcH;\n  const dstRatio = dstW / dstH;\n  if (srcRatio < dstRatio) {\n    const w = dstW;\n    const h = w / srcRatio;\n    const x = 0;\n    const y = (dstH - h) / 2;\n    return { x, y, w, h };\n  } else {\n    const h = dstH;\n    const w = h * srcRatio;\n    const x = (dstW - w) / 2;\n    const y = 0;\n    return { x, y, w, h };\n  }\n}\n\nexport function fitRectFill(_srcW: number, _srcH: number, dstW: number, dstH: number) {\n  return { x: 0, y: 0, w: dstW, h: dstH };\n}\n\nexport function selectFit(mode: 'contain' | 'cover' | 'fill', sw: number, sh: number, dw: number, dh: number) {\n  switch (mode) {\n    case 'cover': return fitRectCover(sw, sh, dw, dh);\n    case 'fill': return fitRectFill(sw, sh, dw, dh);\n    case 'contain':\n    default: return fitRectContain(sw, sh, dw, dh);\n  }\n}\n\n\nexport async function runTasks<T>(tasks: Array<() => Promise<T>>, concurrency: number): Promise<Array<T>> {\n  const taskCount = tasks.length;\n  if (taskCount === 0) {\n      return [];\n  }\n\n  concurrency = Math.max(1, Math.floor(concurrency || 1));\n  concurrency = Math.min(concurrency, taskCount);\n\n  const list: Array<[() => Promise<T>, number]> = tasks.map((v, idx) => [v,idx]);\n\n  const queue: Array<Promise<number>> = [];\n  const results: Array<T> = [];\n\n  const next = async (task: () => Promise<T>, slotIdx: number, taskIdx: number) => {\n      const result = await task();\n      results[taskIdx] = result;\n      return slotIdx;\n  }\n\n  while (list.length > 0) {\n      if (queue.length) {\n          const slotIdx = await Promise.race<number>(queue);\n          const [fn, taskIdx] = list.shift();\n          queue[slotIdx] = next(fn, slotIdx, taskIdx);\n          continue;\n      }\n      queue.push(\n          ...list.splice(0, concurrency)\n              .map(([fn, taskIdx], slotIdx: number) => {\n                  return next(fn, slotIdx, taskIdx);\n              })\n      );\n  }\n  await Promise.all(queue);\n\n  return results;\n}\n\nexport function deepMerge <T> (obj: T, obj2: T): T {\n  // 如果 obj2 是 null 或 undefined，返回 obj 的副本\n  if (obj2 === null) {\n    return obj ? JSON.parse(JSON.stringify(obj)) : obj2;\n  }\n\n  // 如果 obj 是 null 或 undefined，返回 obj2 的副本\n  if (obj === null) {\n    return JSON.parse(JSON.stringify(obj2));\n  }\n\n  // 如果两个参数都不是对象，返回 obj2\n  if (typeof obj !== 'object' || typeof obj2 !== 'object') {\n    return obj2;\n  }\n\n  // 如果 obj2 是数组，直接返回 obj2 的副本\n  if (Array.isArray(obj2)) {\n    return JSON.parse(JSON.stringify(obj2));\n  }\n\n  // 如果 obj 是数组但 obj2 不是，返回 obj2 的副本\n  if (Array.isArray(obj)) {\n    return JSON.parse(JSON.stringify(obj2));\n  }\n\n  // 深度合并对象\n  const result = {} as T;\n\n  // 先复制 obj 的所有属性\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      result[key] = obj[key];\n    }\n  }\n\n  // 然后合并 obj2 的属性\n  for (const key in obj2) {\n    if (obj2.hasOwnProperty(key)) {\n      if (typeof obj2[key] === 'object' && obj2[key] !== null && !Array.isArray(obj2[key]) &&\n          typeof result[key] === 'object' && result[key] !== null && !Array.isArray(result[key])) {\n        // 如果两个值都是对象，递归合并\n        result[key] = deepMerge(result[key], obj2[key]);\n      } else {\n        // 否则直接覆盖\n        result[key] = obj2[key];\n      }\n    }\n  }\n\n  return result;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import ScrollFrameCanvas from './ScrollFrameCanvas';\n\n// 全局变量\nlet scrollFrameCanvas: ScrollFrameCanvas | null = null;\nlet currentFrameRatio = 0;\nlet scrollHint: HTMLElement | null = null;\nlet hintShown = false;\n\n// 显示滚动提示\nfunction showScrollHint(): void {\n  if (scrollHint && !hintShown) {\n    scrollHint.style.opacity = '1';\n    hintShown = true;\n  }\n}\n\n// 隐藏滚动提示\nfunction hideScrollHint(): void {\n  if (scrollHint && hintShown) {\n    scrollHint.style.opacity = '0';\n    hintShown = false;\n  }\n}\n\n// 初始化 ScrollFrameCanvas\nasync function initScrollFrameCanvas (): Promise<void> {\n  const canvas = document.getElementById('canvas') as HTMLCanvasElement;\n\n  try {\n\n    const base = './downloads/graded_4K_100_gm_85_1440_3-';\n\n\n    // 根据当前选择的帧数比例创建 imageFactory\n    const imageFactory = async (index: number) => {\n      if (currentFrameRatio !== 0) {\n        if (index % currentFrameRatio !== 0) {\n        return null;\n        }\n      }\n      return `${base}${String(index + 1).padStart(3, '0')}.jpg`;\n    };\n\n    scrollFrameCanvas = new ScrollFrameCanvas({\n      total: 281,\n      imageFactory: imageFactory,\n      canvasEle: canvas,\n      scrollbarEle: window,\n      scrollAxis: 'y',\n      scaleMode: 'contain',\n\n      large: {\n        enabled: currentFrameRatio === 0,\n        showBackgroundProgress: true,\n        factor: 16,\n      },\n      maxConcurrentLoads: 8, // 控制并行加载数量\n      onError: (e: Error & { frameIndex?: number }) => console.error('[SFC error]', e),\n      onInitComplete: () => {\n        console.log('[SFC] 初始化完成，可以开始滚动了！');\n        // 显示交互提示\n        showScrollHint();\n      },\n      frameMapper: (scrollPixels: number) => {\n        // console.log('totalFrames:', totalFrames);\n      return Math.round(scrollPixels / (9 * Math.max(1, currentFrameRatio)));\n      },\n    });\n\n   const beginSecond = Date.now() / 1000;\n    await scrollFrameCanvas.init();\n    const endSecond = Date.now() / 1000;\n    console.log('初始化完成，耗时:', endSecond - beginSecond, '秒');\n    scrollFrameCanvas.setFrame(0);\n    scrollFrameCanvas.play();\n\n  } catch (error) {\n    console.error('初始化失败:', error);\n  }\n}\n\n// 重新渲染函数\nasync function rerender (): Promise<void> {\n  const rerenderBtn = document.getElementById('rerenderBtn') as HTMLButtonElement;\n\n\n      try {\n      // 禁用按钮\n      rerenderBtn.disabled = true;\n      rerenderBtn.textContent = '渲染中...';\n\n      // 隐藏提示\n      hideScrollHint();\n\n      // 销毁当前实例\n      if (scrollFrameCanvas) {\n        scrollFrameCanvas.destroy();\n        scrollFrameCanvas = null;\n      }\n\n      // 重新初始化\n      await initScrollFrameCanvas();\n\n  } catch (error) {\n    console.error('重新渲染失败:', error);\n  } finally {\n    // 恢复按钮\n    rerenderBtn.disabled = false;\n    rerenderBtn.textContent = '重新渲染';\n  }\n}\n\n// 事件监听和初始化\nwindow.addEventListener('DOMContentLoaded', () => {\n  const frameRatioSelect = document.getElementById('frameRatio') as HTMLSelectElement;\n  const rerenderBtn = document.getElementById('rerenderBtn') as HTMLButtonElement;\n  scrollHint = document.getElementById('scrollHint') as HTMLElement;\n\n  frameRatioSelect.selectedIndex = 0;\n\n  // 帧数比例变化监听\n  frameRatioSelect.addEventListener('change', (e: Event) => {\n    const target = e.target as HTMLSelectElement;\n    currentFrameRatio = parseInt(target.value);\n  });\n\n  // 重新渲染按钮点击监听\n  rerenderBtn.addEventListener('click', rerender);\n\n  // 滚动监听 - 隐藏提示\n  let scrollTimeout: number | null = null;\n  window.addEventListener('scroll', () => {\n    // 防抖处理\n    if (scrollTimeout) {\n      clearTimeout(scrollTimeout);\n    }\n\n    scrollTimeout = window.setTimeout(() => {\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n      if (scrollTop > 50 && hintShown) {\n        hideScrollHint();\n      }\n    }, 100);\n  });\n\n  // 按钮悬停效果\n  rerenderBtn.addEventListener('mouseenter', () => {\n    if (!rerenderBtn.disabled) {\n      rerenderBtn.style.background = '#005a9e';\n    }\n  });\n\n  rerenderBtn.addEventListener('mouseleave', () => {\n    if (!rerenderBtn.disabled) {\n      rerenderBtn.style.background = '#007acc';\n    }\n  });\n\n  // 初始化\n  initScrollFrameCanvas();\n});\n"],"names":[],"sourceRoot":""}